{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\IdeaProjects\\\\react-csat\\\\client\\\\src\\\\Admin\\\\Page8\\\\Chart3\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nvar Chart2 = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chart2, _React$Component);\n\n  var _super = _createSuper(Chart2);\n\n  function Chart2(props) {\n    var _this;\n\n    _classCallCheck(this, Chart2);\n\n    _this = _super.call(this, props);\n    _this.reportRefresh = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, body, series;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/personChart/2');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n              series = [body[0].candidate, body[0].absentee];\n              return _context.abrupt(\"return\", series);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.stateRefresh = function () {\n      _this.reportRefresh().then(function (res) {\n        return _this.setState({\n          series: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      series: ['0', '0'],\n      options: {\n        labels: ['응시자', '결시자'],\n        chart: {\n          type: 'donut'\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'top'\n            }\n          }\n        }],\n        plotOptions: {\n          pie: {\n            donut: {\n              labels: {\n                show: true,\n                name: {\n                  fontSize: 40\n                },\n                value: {\n                  fontSize: 40,\n                  offsetY: 30\n                }\n              },\n              size: '65%'\n            }\n          }\n        }\n      }\n    };\n\n    _this.reportRefresh().then(function (res) {\n      return _this.setState({\n        series: res\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n\n    return _this;\n  }\n\n  _createClass(Chart2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.interval = setInterval(this.stateRefresh, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"donut\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Chart2;\n}(React.Component);\n\nexport default Chart2;","map":{"version":3,"sources":["C:/Users/USER/IdeaProjects/react-csat/client/src/Admin/Page8/Chart3/index.js"],"names":["React","Component","ReactApexChart","Chart2","props","reportRefresh","fetch","response","json","body","series","candidate","absentee","stateRefresh","then","res","setState","catch","err","console","log","state","options","labels","chart","type","responsive","breakpoint","width","legend","position","plotOptions","pie","donut","show","name","fontSize","value","offsetY","size","interval","setInterval"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\nclass Chart2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            series: ['0','0'],\r\n            options: {\r\n                labels: ['응시자', '결시자'],\r\n                chart: {\r\n                    type: 'donut',\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        chart: {\r\n                            width: 200\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }],\r\n                plotOptions: {\r\n                    pie: {\r\n                        donut: {\r\n                            labels:{\r\n                                show:true,\r\n                                name:{\r\n                                    fontSize: 40\r\n                                },\r\n                                value:{\r\n                                    fontSize: 40,\r\n                                    offsetY: 30\r\n                                }\r\n                            },\r\n                            size: '65%'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        };\r\n        this.reportRefresh()\r\n            .then(res => this.setState({series : res}))\r\n            .catch(err=>console.log(err));\r\n\r\n    }\r\n\r\n    reportRefresh = async () =>{\r\n        const response = await fetch('/api/personChart/2');\r\n        const body = await response.json();\r\n        const series = [body[0].candidate, body[0].absentee];\r\n        return series;\r\n    }\r\n    stateRefresh=()=>{\r\n        this.reportRefresh()\r\n            .then(res => this.setState({series : res}))\r\n            .catch(err=>console.log(err));\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.stateRefresh, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Chart2;"]},"metadata":{},"sourceType":"module"}